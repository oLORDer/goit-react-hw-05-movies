{"version":3,"file":"static/js/238.349bbea8.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAsB,mCAAG,sGACbF,IAAAA,IAAU,wBADG,uBAC5BG,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,qDAKtBC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,IAAAA,IAAA,iBAAoBK,EAApB,oBADM,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAS,mCAAG,WAAMD,GAAN,yFACAL,IAAAA,IAAA,iBAAoBK,EAApB,aADA,uBACfF,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKTI,EAAY,mCAAG,WAAMF,GAAN,yFACHL,IAAAA,IAAA,iBAAoBK,EAApB,aADG,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAmB,mCAAG,WAAOC,EAAMC,GAAb,yFACVV,IAAAA,IAAU,gBAAiB,CAChDW,OAAQ,CACNC,MAAOH,EACPC,KAAMA,KAJuB,uBACzBP,EADyB,EACzBA,KADyB,kBAO1BA,GAP0B,2CAAH,uD,wFCvBnBU,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC3B,OACE,SAAC,IAAD,UACGA,EAAcC,KAAI,SAAAC,GAAE,OACnB,eAAgBX,GAAIW,EAAGX,GAAvB,UACE,UAAC,KAAD,CAAMY,GAAE,kBAAaD,EAAGX,IAAxB,WACE,gBACEa,IACEF,EAAGG,YAAH,6CAC0CH,EAAGG,aAD7C,qFAIFC,IAAI,GACJC,MAAO,MAERL,EAAGM,UAXCN,EAAGX,GADO,KAkB1B,C,yGCvBYkB,EAAOC,EAAAA,GAAAA,GAAH,oNAgBJC,EAAQD,EAAAA,GAAAA,GAAH,sE,iHChBLE,E,QAAaF,GAAAA,KAAH,8Z,SCEVG,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC3B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOjB,EAAP,KAAckB,EAAd,KAUA,OACE,UAACJ,EAAD,CAAYK,SATS,SAAAC,GACrBA,EAAEC,iBACGrB,IAELgB,EAAahB,GACbkB,EAAS,IACV,EAGC,WACE,kBACEI,KAAK,OACLC,MAAOvB,EACPwB,YAAY,mBACZC,SAAU,SAAAL,GAAC,OAAIF,EAASE,EAAEM,OAAOH,MAAtB,KAEb,mBAAQD,KAAK,SAAb,oBAGL,E,UCMD,EA3Be,WACb,OAAkCL,EAAAA,EAAAA,UAAS,MAA3C,eAAOU,EAAP,KAAkBC,EAAlB,KACA,GAAeX,EAAAA,EAAAA,UAAS,GAAjBnB,GAAP,eACA,GAA0BmB,EAAAA,EAAAA,UAAS,MAAnC,eAAOjB,EAAP,KAAckB,EAAd,MAEAW,EAAAA,EAAAA,YAAU,WACH7B,IAILJ,EAAAA,EAAAA,IAAoBI,EAAOF,GACxBgC,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBH,EAAaG,EAA9B,IACLC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACjC,EAAOF,IAMX,OACE,6BACE,SAACiB,EAAD,CAAYC,aANI,SAAAI,GAClBF,EAASE,EACV,IAKIO,IAAa,SAAC1B,EAAA,EAAD,CAAYC,cAAeyB,MAG9C,C","sources":["cervices/api.js","components/MoviesList/MoviesList.jsx","pages/Home/home.styled.js","components/InputQuery/inputQuery.styled.js","components/InputQuery/InputQuery.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '9ef4f856967516d9db9d1f8ae9ae1dd2',\n};\n\nexport const fetchMostPopularMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n};\n\nexport const fetchMovieForId = async id => {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const fetchMoviesForQuery = async (name, page) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query: name,\n      page: page,\n    },\n  });\n  return data;\n};\n","import { Link } from 'react-router-dom';\nimport { List } from 'pages/Home/home.styled.js';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ popularMovies }) => {\n  return (\n    <List>\n      {popularMovies.map(el => (\n        <li key={el.id} id={el.id}>\n          <Link to={`/movies/${el.id}`}>\n            <img\n              src={\n                el.poster_path\n                  ? `https://image.tmdb.org/t/p/original${el.poster_path}`\n                  : `https://img.freepik.com/free-vector/glitch-error-404-page_23-2148105404.jpg?w=2000`\n              }\n              alt=\"\"\n              width={350}\n            />\n            {el.title}\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  popularMovies: PropTypes.array,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  & li {\n    width: 350px;\n    align-items: stretch;\n  }\n\n  & a {\n    font-size: 24px;\n  }\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 15px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n\n  & input {\n    padding: 5px;\n    font-size: 16px;\n  }\n\n  & button {\n    border: none;\n    border-radius: 5px;\n    margin-left: 10px;\n    padding: 5px 15px;\n    background-color: orange;\n    cursor: pointer;\n    font-weight: 700;\n\n    &:hover,\n    &:focus {\n      background-color: green;\n    }\n  }\n`;\n","import { useState } from 'react';\n\nimport { StyledForm } from './inputQuery.styled.js';\n\nexport const InputQuery = ({ onSubmitFunc }) => {\n  const [query, setQuery] = useState('');\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    if (!query) return;\n\n    onSubmitFunc(query);\n    setQuery('');\n  };\n\n  return (\n    <StyledForm onSubmit={onHandleSubmit}>\n      <input\n        type=\"text\"\n        value={query}\n        placeholder=\"choose you movie\"\n        onChange={e => setQuery(e.target.value)}\n      />\n      <button type=\"submit\">Find</button>\n    </StyledForm>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { fetchMoviesForQuery } from 'cervices/api';\nimport { InputQuery } from 'components/InputQuery/InputQuery';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [moviesArr, setMoviesArr] = useState(null);\n  const [page] = useState(1);\n  const [query, setQuery] = useState(null);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchMoviesForQuery(query, page)\n      .then(({ results }) => setMoviesArr(results))\n      .catch(err => console.log(err));\n  }, [query, page]);\n\n  const setNewQuery = e => {\n    setQuery(e);\n  };\n\n  return (\n    <main>\n      <InputQuery onSubmitFunc={setNewQuery} />\n      {moviesArr && <MoviesList popularMovies={moviesArr} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","api_key","fetchMostPopularMovies","data","fetchMovieForId","id","fetchCast","fetchReviews","fetchMoviesForQuery","name","page","params","query","MoviesList","popularMovies","map","el","to","src","poster_path","alt","width","title","List","styled","Title","StyledForm","InputQuery","onSubmitFunc","useState","setQuery","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","moviesArr","setMoviesArr","useEffect","then","results","catch","err","console","log"],"sourceRoot":""}