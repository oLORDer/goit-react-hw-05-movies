{"version":3,"file":"static/js/795.35ce1ace.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAsB,mCAAG,sGACbF,IAAAA,IAAU,wBADG,uBAC5BG,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,qDAKtBC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,IAAAA,IAAA,iBAAoBK,EAApB,oBADM,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAS,mCAAG,WAAMD,GAAN,yFACAL,IAAAA,IAAA,iBAAoBK,EAApB,aADA,uBACfF,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKTI,EAAY,mCAAG,WAAMF,GAAN,yFACHL,IAAAA,IAAA,iBAAoBK,EAApB,aADG,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAmB,mCAAG,WAAOC,EAAMC,GAAb,yFACVV,IAAAA,IAAU,gBAAiB,CAChDW,OAAQ,CACNC,MAAOH,EACPC,KAAMA,KAJuB,uBACzBP,EADyB,EACzBA,KADyB,kBAO1BA,GAP0B,2CAAH,uD,2HCzBnBU,E,QAAaC,GAAAA,GAAH,mJ,SCmCvB,EA/BiB,WACf,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,GAAUY,GACPG,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAAQK,EAAtB,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACN,KAGF,SAACL,EAAD,iBACGG,QADH,IACGA,OADH,EACGA,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,aAAcnB,EAAjB,EAAiBA,KAAMoB,EAAvB,EAAuBA,UAAWxB,EAAlC,EAAkCA,GAAlC,OACT,2BACE,gBACEyB,IACEF,EAAY,6CAC8BA,GAD9B,qFAIdG,IAAKtB,EACLuB,MAAM,WAER,uBAAIvB,KACJ,uBAAIoB,MAXGxB,EADA,KAiBhB,C","sources":["cervices/api.js","pages/Cast/castPage.styled.js","pages/Cast/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '9ef4f856967516d9db9d1f8ae9ae1dd2',\n};\n\nexport const fetchMostPopularMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n};\n\nexport const fetchMovieForId = async id => {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const fetchMoviesForQuery = async (name, page) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query: name,\n      page: page,\n    },\n  });\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: space-between;\n\n  & li {\n    width: 100px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'cervices/api';\n\nimport { StyledList } from './castPage.styled';\n\nconst CastPage = () => {\n  const [cost, setCost] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchCast(movieId)\n      .then(({ cast }) => setCost(cast))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <StyledList>\n      {cost?.map(({ profile_path, name, character, id }) => (\n        <li key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/original${profile_path}`\n                : `https://img.freepik.com/free-vector/glitch-error-404-page_23-2148105404.jpg?w=2000`\n            }\n            alt={name}\n            width=\"100px\"\n          />\n          <p>{name}</p>\n          <p>{character}</p>\n        </li>\n      ))}\n    </StyledList>\n  );\n};\n\nexport default CastPage;\n"],"names":["axios","api_key","fetchMostPopularMovies","data","fetchMovieForId","id","fetchCast","fetchReviews","fetchMoviesForQuery","name","page","params","query","StyledList","styled","useState","cost","setCost","movieId","useParams","useEffect","then","cast","catch","error","console","log","map","profile_path","character","src","alt","width"],"sourceRoot":""}