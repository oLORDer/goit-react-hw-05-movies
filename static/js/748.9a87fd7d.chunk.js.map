{"version":3,"file":"static/js/748.9a87fd7d.chunk.js","mappings":"2TAEAA,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAsB,mCAAG,sGACbF,IAAAA,IAAU,wBADG,uBAC5BG,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,qDAKtBC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,IAAAA,IAAA,iBAAoBK,EAApB,oBADM,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAS,mCAAG,WAAMD,GAAN,yFACAL,IAAAA,IAAA,iBAAoBK,EAApB,aADA,uBACfF,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKTI,EAAY,mCAAG,WAAMF,GAAN,yFACHL,IAAAA,IAAA,iBAAoBK,EAApB,aADG,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAmB,mCAAG,WAAOC,EAAMC,GAAb,yFACVV,IAAAA,IAAU,gBAAiB,CAChDW,OAAQ,CACNC,MAAOH,EACPC,KAAMA,KAJuB,uBACzBP,EADyB,EACzBA,KADyB,kBAO1BA,GAP0B,2CAAH,uD,kFCWhC,UAlCoB,WAClB,OAA8BU,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAaS,GACVG,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBL,EAAWK,EAA5B,IACLC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACN,KAGF,yBACU,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASW,QAAS,EACjBX,EAAQY,KAAI,kBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,eAAgBxB,EAApC,EAAoCA,GAApC,OACV,2BACE,gBACEyB,KACE,UAAAD,EAAeE,mBAAf,eAA4BC,MAAM,KAAlC,qFAGFC,IAAKN,EACLO,MAAM,WAER,qCAAaN,MACb,oCAAYD,OAVLtB,EADC,KAeZ,+CAIP,C","sources":["cervices/api.js","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '9ef4f856967516d9db9d1f8ae9ae1dd2',\n};\n\nexport const fetchMostPopularMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week');\n  return data;\n};\n\nexport const fetchMovieForId = async id => {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const fetchMoviesForQuery = async (name, page) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query: name,\n      page: page,\n    },\n  });\n  return data;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'cervices/api';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(({ results }) => setReviews(results))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews?.length > 0 ? (\n        reviews.map(({ author, content, author_details, id }) => (\n          <li key={id}>\n            <img\n              src={\n                author_details.avatar_path?.slice(1) ||\n                `https://img.freepik.com/free-vector/glitch-error-404-page_23-2148105404.jpg?w=2000`\n              }\n              alt={author}\n              width=\"100px\"\n            />\n            <p>Comment: {content}</p>\n            <p>Author: {author}</p>\n          </li>\n        ))\n      ) : (\n        <h2>Havent any review</h2>\n      )}\n    </ul>\n  );\n};\n\nexport default ReviewsPage;\n"],"names":["axios","api_key","fetchMostPopularMovies","data","fetchMovieForId","id","fetchCast","fetchReviews","fetchMoviesForQuery","name","page","params","query","useState","reviews","setReviews","movieId","useParams","useEffect","then","results","catch","error","console","log","length","map","author","content","author_details","src","avatar_path","slice","alt","width"],"sourceRoot":""}